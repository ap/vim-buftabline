*buftabline.txt* Use the tabline to render buffer tabs

		BUFTABLINE  by Aristotle Pagaltzis

==============================================================================
0. Contents                                                         *buftabline*

    1. Intro ....................................... |buftabline-intro|
    2. Tab coloring and colorscheme support ........ |buftabline-colors|
    3. Comparisons with other plugins .............. |buftabline-vs-x|
    4. Source ...................................... |buftabline-source|


==============================================================================
1. Intro                                                      *buftabline-intro*

This plugin takes over the 'tabline' and renders the buffer list in it instead
of a tab list. It is designed with the ideal that it should Just Work, and has
no configurable behaviour: drop it into your configuration and you’re done.


==============================================================================
2. Tab coloring and colorscheme support                      *buftabline-colors*

This plugin uses several custom highlight groups to render the buffer tabs.
The custom groups are linked to several other built-in Vim highlight groups
that should provide a sensible default which automatically harmonizes with
your |colorscheme|.

However, if you dislike your colorscheme’s chosen tabline colours, you can
override the default links in your |vimrc| – c.f. |:hi-link|.

Or if you are a colorscheme designer (|44.1|), you can add support to your
colorscheme for this plugin specifically.

The highlight groups and their default links are as follows:

    Custom group             Default link
    *BufTabLineCurrent*        |TabLineSel|
    *BufTabLineActive*         |PmenuSel|
    *BufTabLineHidden*         |TabLine|
    *BufTabLineFill*           |TabLineFill|


==============================================================================
3. Comparisons with other plugins                              *buftabline-vs-x*

As of Nov 15, 2014, here are some comparisons to some other plugins of which
I am aware that they offer related functionality.


MiniBufExpl~
http://www.vim.org/scripts/script.php?script_id=159

Obviously no comparison can be complete without the veteran of buffer list
plugins, Mini Buffer Explorer. There are two major differences:

1. Buftabline uses the tabline while MiniBufExpl renders to a special buffer
   in a split. The tabline is newer than MiniBufExpl, and unlike a buffer, it
   is guaranteed to stick to the top of the screen within Vim, unaffected by
   any splits.

1. Because Buftabline uses the tabline, it cannot offer any functionality
   relating to the management of buffers: all it does is show you the list.

   OTOH, this also makes Buftabline very lightweight from a user perspective:
   Vim has plenty of facilities for managing buffers and with Buftabline you
   will be using those. Buftabline need not aspire to be your sole interface
   to Vim’s buffers,


buftabs~
http://www.vim.org/scripts/script.php?script_id=1664

Buftabs is what you get when you try to implement Buftabline on a Vim that
does not yet have the 'tabline'. It can only render your tabs near or at the
bottom of the Vim screen, and you have the choice between trading in your
'statusline' for the list, or having it flicker “behind” the command line. If
MiniBufExpl is too heavy for you, buftabs is the best you can do in absence of
the 'tabline'.


Airline~
http://www.vim.org/scripts/script.php?script_id=4661

If you already use Airline, you do not need Buftabline: the functionality
comes built in – see |airline-tabline|.

If you do not already use Airline, you may not want to: it is far heavier than
Buftabline, to the point of dragging down performance. C.f.
https://www.reddit.com/r/vim/comments/2lw1fd/pretty_statuslines_vs_cursor_speed/


BufLine~
http://www.vim.org/scripts/script.php?script_id=4940

This is very similar in scope and strategy to Buftabline, but not nearly as
simple. The code is more than 5 times as long. There are lots of options and
mappings so despite its limited scope compared to something like MiniBufExpl
or Airline, it feels like a Big Plugin – one that requires a large up-front
commitment. And subjective though this is, I will call its default colours
ugly (while the ones in Buftabline depend entirely on your colorscheme), nor
does it make any attempt to harmonise with the user colorscheme.


WinTabs~
https://github.com/zefei/vim-wintabs

This is another Big Plugin, though much, much better. It supports Vim tabs in
addition to buffers, and tries to implement a functionality that is not native
to Vim tabs: scoping buffers to certain tabs. This means it also needs to hook
into sessions in order to suppor them, which it does. All in all, if you want
to use Vim tabs, this is probably the best plugin for you – Buftabline will be
too simplistic for your preferences.


==============================================================================
4. Source                                                    *buftabline-source*

https://github.com/ap/vim-buftabline


vim:tw=78:et:ft=help:norl:
